{"version":3,"sources":["components/ListComponent.js","seeds/index.js","hooks/app-state.js","components/DrawerComponent.js","components/Home.js","components/CollapseComponent.js","components/pages/PagePPComponent.js","components/pages/PagePComponent.js","routes/PreProductionRoute.js","routes/ProductionRoute.js","routes/Main.js","App.js","serviceWorker.js","index.js"],"names":["ListComponent","array","onClick","open","uri","hasURI","listItem","el","ListItem","button","ListItemText","primary","nav","_id","List","map","to","preProduction","production","AppContext","createContext","StoreProvider","state","children","Provider","value","useStore","useContext","useStyles","makeStyles","list","width","fullList","DrawerLeft","classes","useState","setOpen","openProduction","setOpenProduction","main","val","setState","toggleDrawer","event","type","key","IconButton","color","aria-label","edge","SwipeableDrawer","onClose","onOpen","className","onKeyDown","handleClick","CollapseComponent","Home","Collapse","in","timeout","unmountOnExit","root","fontSize","PagePPComponent","params","useParams","filter","id","PagePComponent","PreProductionRoute","path","exact","render","ProductionRoute","theme","padding","spacing","height","backgroundColor","palette","background","default","text","container","alignItems","textAlign","Main","Grid","item","xs","component","generateClassName","createGenerateClassName","productionPrefix","checkBox","position","right","top","App","night","setNight","React","useMemo","createMuiTheme","overrides","MuiInputLabel","StylesProvider","ThemeProvider","responsiveFontSizes","Checkbox","icon","WbSunny","checkedIcon","NightsStay","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03c91431.chunk.js","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PropTypes from \"prop-types\";\n\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListComponent({ array, onClick, open, uri }) {\n  const hasURI = !!uri;\n\n  const listItem = el => (\n    <ListItem key={`${el._id}-${el.nav}`} button onClick={onClick}>\n      <ListItemText primary={el.nav} />\n      {!hasURI && (open ? <ExpandLess /> : <ExpandMore />)}\n    </ListItem>\n  );\n\n  return (\n    <List>\n      {hasURI\n        ? array.map(el => (\n            <Link\n              to={`${uri}${el._id}`}\n              key={`${el._id}-${el.nav}`}\n              onClick={onClick}\n            >\n              {listItem(el)}\n            </Link>\n          ))\n        : array.map(el => listItem(el))}\n    </List>\n  );\n}\n\nListComponent.propTypes = {\n  array: PropTypes.array.isRequired,\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  uri: PropTypes.string\n};\n\nexport default ListComponent;\n","const preProduction = [\n  {\n    _id: \"4\",\n    nav: \"Brand Questionnaire\"\n  },\n  {\n    _id: \"5\",\n    nav: \"Project Questionnaire\"\n  },\n  {\n    _id: \"6\",\n    nav: \"Upload Assets\"\n  }\n];\n\nconst production = [\n  {\n    _id: \"1\",\n    nav: \"schedule Creative Call\"\n  },\n  {\n    _id: \"2\",\n    nav: \"Production Location\"\n  },\n  {\n    _id: \"3\",\n    nav: \"Review Script\"\n  },\n  {\n    _id: \"7\",\n    nav: \"Select Voiceover\"\n  }\n];\n\nexport { preProduction, production };\n","import React, { createContext, useContext } from \"react\";\n\nimport { preProduction, production } from \"../seeds\";\n\nconst AppContext = createContext();\n\nfunction StoreProvider({ state = { preProduction, production }, children }) {\n  return <AppContext.Provider value={state} children={children} />;\n}\n\nconst useStore = () => useContext(AppContext);\n\nexport { StoreProvider, useStore };\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport ListComponent from \"./ListComponent\";\n\nimport { CollapseComponent } from \".\";\nimport { Link } from \"react-router-dom\";\nimport { useStore } from \"../hooks\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: \"400px\"\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nexport default function DrawerLeft() {\n  const classes = useStyles();\n  const { preProduction, production } = useStore();\n  const [open, setOpen] = useState(false);\n  const [openProduction, setOpenProduction] = useState(false);\n  const [openPreProduction, setOpenPreProduction] = useState(false);\n  const main = [\n    {\n      nav: \"Pre Production\",\n      val: preProduction,\n      state: openProduction,\n      setState: setOpenProduction,\n      uri: \"/pp/\"\n    },\n    {\n      nav: \"Production\",\n      val: production,\n      state: openPreProduction,\n      setState: setOpenPreProduction,\n      uri: \"/p/\"\n    }\n  ];\n\n  const toggleDrawer = open => event => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setOpen(open);\n  };\n\n  const handleClick = (state, setState) => setState(!state);\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={toggleDrawer(true)}\n        edge=\"start\"\n      >\n        <MenuIcon />\n      </IconButton>\n\n      <SwipeableDrawer\n        open={open}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n      >\n        <div className={classes.list} onKeyDown={toggleDrawer(false)}>\n          <Link to=\"/\">\n            <ListItem button>\n              <ListItemText primary={\"Home\"} onClick={toggleDrawer(false)} />\n            </ListItem>\n          </Link>\n          {main.map((el, key) => {\n            return (\n              <div key={key}>\n                <ListComponent\n                  open={el.state}\n                  onClick={() => handleClick(el.state, el.setState)}\n                  array={[el]}\n                />\n                <CollapseComponent open={el.state}>\n                  <ListComponent\n                    array={el.val}\n                    uri={el.uri}\n                    onClick={toggleDrawer(false)}\n                  />\n                </CollapseComponent>\n              </div>\n            );\n          })}\n        </div>\n      </SwipeableDrawer>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Home() {\n  return <h1>HOME</h1>;\n}\n","import React from \"react\";\n\nimport Collapse from \"@material-ui/core/Collapse\";\n\nfunction CollapseComponent({ children, open }) {\n  return (\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      {children}\n    </Collapse>\n  );\n}\n\nexport { CollapseComponent };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useStore } from \"../../hooks\";\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"3rem\"\n  }\n});\n\nfunction PagePPComponent() {\n  const params = useParams(),\n    classes = useStyles(),\n    { preProduction } = useStore(),\n    val = preProduction.filter(el => el._id === params.id)[0],\n    { nav } = val;\n\n  return <div className={classes.root}>{nav}</div>;\n}\n\nexport { PagePPComponent };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useStore } from \"../../hooks\";\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"3rem\"\n  }\n});\n\nfunction PagePComponent() {\n  const params = useParams(),\n    classes = useStyles(),\n    { production } = useStore(),\n    val = production.filter(el => el._id === params.id)[0],\n    { nav } = val;\n\n  return <div className={classes.root}>{nav}</div>;\n}\n\nexport { PagePComponent };\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { PagePPComponent } from \"../components/pages\";\n\nfunction PreProductionRoute() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/pp/:id\" exact render={() => <PagePPComponent />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport { PreProductionRoute };\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { PagePComponent } from \"../components/pages\";\n\nfunction ProductionRoute() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/p/:id\" exact render={() => <PagePComponent />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport { ProductionRoute };\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport { DrawerComponent, Home } from \"../components\";\nimport { PreProductionRoute } from \"./PreProductionRoute\";\nimport { ProductionRoute } from \"./ProductionRoute\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1.5),\n    height: \"100vh\",\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary\n  },\n  container: {\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  main: {\n    textAlign: \"center\"\n  }\n}));\n\nexport default function Main() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <HashRouter>\n        <Grid container className={classes.container}>\n          <Grid item xs={2}>\n            <DrawerComponent />\n          </Grid>\n          <Grid item xs={10} className={classes.main}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/pp\" component={PreProductionRoute} />\n              <Route path=\"/p\" component={ProductionRoute} />\n            </Switch>\n          </Grid>\n        </Grid>\n      </HashRouter>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  StylesProvider,\n  createGenerateClassName,\n  responsiveFontSizes\n} from \"@material-ui/core/styles\";\n\nimport { NightsStay, WbSunny } from \"@material-ui/icons\";\nimport Main from \"./routes/Main\";\nimport { StoreProvider } from \"./hooks\";\nimport \"./App.css\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst generateClassName = createGenerateClassName({\n  productionPrefix: \"lemon-light-\"\n});\n\nconst useStyles = makeStyles(theme => ({\n  checkBox: {\n    position: \"absolute\",\n    right: 10,\n    top: 10\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles(),\n    [night, setNight] = useState(true);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: night ? \"dark\" : \"light\"\n        },\n        overrides: {\n          MuiInputLabel: {\n            root: {\n              fontSize: \"13px\"\n            }\n          }\n        }\n      }),\n    [night]\n  );\n\n  const handleClick = () => setNight(!night);\n  return (\n    // generate dynamic class name\n    <StylesProvider generateClassName={generateClassName}>\n      <ThemeProvider theme={responsiveFontSizes(theme)}>\n        <StoreProvider>\n          <Checkbox\n            className={classes.checkBox}\n            icon={<WbSunny />}\n            checkedIcon={<NightsStay />}\n            value=\"checkedH\"\n            onClick={handleClick}\n          />\n          <Main />\n        </StoreProvider>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}